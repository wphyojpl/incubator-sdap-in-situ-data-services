apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "parquet.spark.helm.fullname" . }}
  labels:
    {{- include "parquet.spark.helm.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "parquet.spark.helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "parquet.spark.helm.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "parquet.spark.helm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: aws_access_key_id
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-auth
                  key: awskey
            - name: aws_secret_access_key
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-auth
                  key: awssecret
            - name: aws_session_token
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-auth
                  key: awstoken
#            - name: aws_access_key_id
#              value: {{ .Values.aws_creds.awskey }}
#            - name: aws_secret_access_key
#              value: {{ .Values.aws_creds.awssecret }}
#            - name: aws_secret_access_key
#              value: {{ .Values.aws_creds.awstoken }}
            - name: flask_prefix
              value: {{ .Values.flask_env.flask_prefix }}
            - name: parquet_file_name
              value: {{ .Values.flask_env.parquet_file_name }}
            - name: master_spark_url
              value: {{ .Values.flask_env.master_spark_url }}
            - name: parquet_metadata_tbl
              value: {{ .Values.flask_env.parquet_metadata_tbl }}
            - name: es_url
              value: {{ .Values.flask_env.es_url }}
            - name: spark_app_name
              value: {{ .Values.flask_env.spark_app_name }}
            - name: log_level
              value: {{ .Values.flask_env.log_level }}
            - name: spark_config_dict
              value: {{ .Values.flask_env.spark_config_dict | toJson | quote  }}
#          livenessProbe:
#            httpGet:
#              path: '/1.0/doc/'
#              port: 9801
#            initialDelaySeconds: 5
#          readinessProbe:
#            httpGet:
#              path: '/1.0/doc/'
#              port: 9801
#            initialDelaySeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
