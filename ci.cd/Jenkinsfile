/**
* The following flags can be used to control stages of the pipeline to be run.
*/
def PIPELINE_CONTROL = [
    ci_skip: false
]

pipeline {
    agent {
        node {
            label 'CAE-Jenkins2-DH-Agents-Linux'
        }
    }

    environment {
        LATEST_TAG = 'latest'
        BUILD_TAG_RAW = "build-${env.BRANCH_NAME}-${env.BUILD_NUMBER}"
        BUILD_TAG = sh(script: "echo ${env.BUILD_TAG_RAW} | tr -dc \"[A-Za-z0-9\\-\\_\\.]\"", returnStdout: true).trim() // to strip out special characters in branch name
        HOME="." /* to resolve EACCES: permission denied, mkdir '/.npm'*/
        GH4JPL=credentials("wphyo-github")
        CAE_ARTI_TOKEN=credentials("wphyo-cae-artifactory-token-as-text")
        GH_TOKEN="${GH4JPL_PSW}"
        GH_URL="https://github.jpl.nasa.gov/api/v3"

//         CAE_ARTI_TOKEN=credentials("wphyo-cae-artifactory")

        ARTIFACTORY_URL="https://cae-artifactory.jpl.nasa.gov:16001"
    }

    stages {
        // "Borrowed" from https://github.com/MarkAckert/staging-zowe-ims-plugin/blob/master/Jenkinsfile
        stage('Check for Skip CI') {
            steps {
                script {
                    def result = sh (returnStatus: true, script: 'git log -1 | grep \'.*\\[skip ci\\].*\'')
                    if (result == 0) {
                        echo '"skip ci" spotted in the git commit. Aborting...'
                        PIPELINE_CONTROL.ci_skip = true
                    }
                }
            }
        }
        stage('Build and push zip file') {
            when { expression { return PIPELINE_CONTROL.ci_skip == false } }
            steps {
                withDockerRegistry([url: "https://index.docker.io/v1/", credentialsId: "	waiphyojpl-dockerhub"]) {
                    sh("VERSION=${BUILD_TAG} make -f ci.cd/Makefile build_push")
                }
            }
        }
    }

    post {
        always {
            deleteDir()
            sh("docker logout")
        }
    }
}